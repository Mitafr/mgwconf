/*
 * Microgateway monitoring API
 *
 * # Introduction This is the monitoring API for Swift Microgateway (MGW). It allows you remotly manage and control a bunch of Microgateway services API as SAG, etc. # Authentication Use API Key shared between Business Application and Microgateway. # Audience:    * Business analysts and architects to understand the functionality of the Microgateway management API and how to integrate the use of the MGW within their organisation   * Software developers/SAG managers using the API to manage MGW service's
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer@swift.com
 * Generated by: https://openapi-generator.tech
 */

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MetricsList {
    #[serde(rename = "http.server.requests")]
    HttpPeriodServerPeriodRequests,
    #[serde(rename = "jetty.threads.busy")]
    JettyPeriodThreadsPeriodBusy,
    #[serde(rename = "jetty.threads.config.max")]
    JettyPeriodThreadsPeriodConfigPeriodMax,
    #[serde(rename = "jetty.threads.config.min")]
    JettyPeriodThreadsPeriodConfigPeriodMin,
    #[serde(rename = "jetty.threads.current")]
    JettyPeriodThreadsPeriodCurrent,
    #[serde(rename = "jetty.threads.idle")]
    JettyPeriodThreadsPeriodIdle,
    #[serde(rename = "jetty.threads.jobs")]
    JettyPeriodThreadsPeriodJobs,
    #[serde(rename = "jvm.buffer.count")]
    JvmPeriodBufferPeriodCount,
    #[serde(rename = "jvm.buffer.memory.used")]
    JvmPeriodBufferPeriodMemoryPeriodUsed,
    #[serde(rename = "jvm.buffer.total.capacity")]
    JvmPeriodBufferPeriodTotalPeriodCapacity,
    #[serde(rename = "jvm.classes.loaded")]
    JvmPeriodClassesPeriodLoaded,
    #[serde(rename = "jvm.classes.unloaded")]
    JvmPeriodClassesPeriodUnloaded,
    #[serde(rename = "jvm.gc.live.data.size")]
    JvmPeriodGcPeriodLivePeriodDataPeriodSize,
    #[serde(rename = "jvm.gc.max.data.size")]
    JvmPeriodGcPeriodMaxPeriodDataPeriodSize,
    #[serde(rename = "jvm.gc.memory.allocated")]
    JvmPeriodGcPeriodMemoryPeriodAllocated,
    #[serde(rename = "jvm.gc.memory.promoted")]
    JvmPeriodGcPeriodMemoryPeriodPromoted,
    #[serde(rename = "jvm.gc.pause")]
    JvmPeriodGcPeriodPause,
    #[serde(rename = "jvm.memory.committed")]
    JvmPeriodMemoryPeriodCommitted,
    #[serde(rename = "jvm.memory.max")]
    JvmPeriodMemoryPeriodMax,
    #[serde(rename = "jvm.memory.used")]
    JvmPeriodMemoryPeriodUsed,
    #[serde(rename = "jvm.threads.daemon")]
    JvmPeriodThreadsPeriodDaemon,
    #[serde(rename = "jvm.threads.live")]
    JvmPeriodThreadsPeriodLive,
    #[serde(rename = "jvm.threads.peak")]
    JvmPeriodThreadsPeriodPeak,
    #[serde(rename = "jvm.threads.states")]
    JvmPeriodThreadsPeriodStates,
    #[serde(rename = "logback.events")]
    LogbackPeriodEvents,
    #[serde(rename = "process.cpu.usage")]
    ProcessPeriodCpuPeriodUsage,
    #[serde(rename = "process.start.time")]
    ProcessPeriodStartPeriodTime,
    #[serde(rename = "process.uptime")]
    ProcessPeriodUptime,
    #[serde(rename = "system.cpu.count")]
    SystemPeriodCpuPeriodCount,
    #[serde(rename = "system.cpu.usage")]
    SystemPeriodCpuPeriodUsage,
}

impl ToString for MetricsList {
    fn to_string(&self) -> String {
        match self {
            Self::HttpPeriodServerPeriodRequests => String::from("http.server.requests"),
            Self::JettyPeriodThreadsPeriodBusy => String::from("jetty.threads.busy"),
            Self::JettyPeriodThreadsPeriodConfigPeriodMax => {
                String::from("jetty.threads.config.max")
            }
            Self::JettyPeriodThreadsPeriodConfigPeriodMin => {
                String::from("jetty.threads.config.min")
            }
            Self::JettyPeriodThreadsPeriodCurrent => String::from("jetty.threads.current"),
            Self::JettyPeriodThreadsPeriodIdle => String::from("jetty.threads.idle"),
            Self::JettyPeriodThreadsPeriodJobs => String::from("jetty.threads.jobs"),
            Self::JvmPeriodBufferPeriodCount => String::from("jvm.buffer.count"),
            Self::JvmPeriodBufferPeriodMemoryPeriodUsed => String::from("jvm.buffer.memory.used"),
            Self::JvmPeriodBufferPeriodTotalPeriodCapacity => {
                String::from("jvm.buffer.total.capacity")
            }
            Self::JvmPeriodClassesPeriodLoaded => String::from("jvm.classes.loaded"),
            Self::JvmPeriodClassesPeriodUnloaded => String::from("jvm.classes.unloaded"),
            Self::JvmPeriodGcPeriodLivePeriodDataPeriodSize => {
                String::from("jvm.gc.live.data.size")
            }
            Self::JvmPeriodGcPeriodMaxPeriodDataPeriodSize => String::from("jvm.gc.max.data.size"),
            Self::JvmPeriodGcPeriodMemoryPeriodAllocated => String::from("jvm.gc.memory.allocated"),
            Self::JvmPeriodGcPeriodMemoryPeriodPromoted => String::from("jvm.gc.memory.promoted"),
            Self::JvmPeriodGcPeriodPause => String::from("jvm.gc.pause"),
            Self::JvmPeriodMemoryPeriodCommitted => String::from("jvm.memory.committed"),
            Self::JvmPeriodMemoryPeriodMax => String::from("jvm.memory.max"),
            Self::JvmPeriodMemoryPeriodUsed => String::from("jvm.memory.used"),
            Self::JvmPeriodThreadsPeriodDaemon => String::from("jvm.threads.daemon"),
            Self::JvmPeriodThreadsPeriodLive => String::from("jvm.threads.live"),
            Self::JvmPeriodThreadsPeriodPeak => String::from("jvm.threads.peak"),
            Self::JvmPeriodThreadsPeriodStates => String::from("jvm.threads.states"),
            Self::LogbackPeriodEvents => String::from("logback.events"),
            Self::ProcessPeriodCpuPeriodUsage => String::from("process.cpu.usage"),
            Self::ProcessPeriodStartPeriodTime => String::from("process.start.time"),
            Self::ProcessPeriodUptime => String::from("process.uptime"),
            Self::SystemPeriodCpuPeriodCount => String::from("system.cpu.count"),
            Self::SystemPeriodCpuPeriodUsage => String::from("system.cpu.usage"),
        }
    }
}

impl Default for MetricsList {
    fn default() -> MetricsList {
        Self::HttpPeriodServerPeriodRequests
    }
}
