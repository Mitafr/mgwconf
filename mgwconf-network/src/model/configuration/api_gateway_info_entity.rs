/*
 * Microgateway configuration API
 *
 * # Introduction This is the configuration API for Swift Microgateway (MGW). It allows remotly configure Microgateway. # Authentication Use API Key shared between Business Application and Microgateway. # Audience:    * Business analysts and architects to understand the functionality of the Microgateway configuration API and how to integrate the use of the MGW within their organisation   * Software developers using the API to configure MGW
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: developer@swift.com
 * Generated by: https://openapi-generator.tech
 */

use std::any::Any;

use crate::model::InnerEntityTrait;

use super::Environment;

/// ApiGatewayInfoEntity : Api Gateway Info with environment and public certificate alias

#[derive(Default, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApiGatewayInfoEntity {
    #[serde(rename = "environment")]
    pub environment: Environment,
    #[serde(rename = "publicCertAlias")]
    pub public_cert_alias: String,
}

impl ApiGatewayInfoEntity {
    /// Api Gateway Info with environment and public certificate alias
    pub fn new(environment: Environment, public_cert_alias: String) -> ApiGatewayInfoEntity {
        ApiGatewayInfoEntity { environment, public_cert_alias }
    }
}

impl InnerEntityTrait for ApiGatewayInfoEntity {
    fn entity_type(&self) -> &str {
        "Api Proxy"
    }
    fn name(&self) -> &str {
        &self.public_cert_alias
    }
    fn to_string(&self) -> String {
        serde_json::to_string_pretty(self).unwrap()
    }
    fn as_any(&self) -> &dyn Any {
        self
    }
}
