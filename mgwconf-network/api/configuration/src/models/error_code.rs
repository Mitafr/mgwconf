/*
 * Microgateway configuration API
 *
 * # Introduction This is the configuration API for Swift Microgateway (MGW). It allows remotly configure Microgateway. # Authentication Use API Key shared between Business Application and Microgateway. # Audience:    * Business analysts and architects to understand the functionality of the Microgateway configuration API and how to integrate the use of the MGW within their organisation   * Software developers using the API to configure MGW 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: developer@swift.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use crate::InnerEntityTrait;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ErrorCode {
    #[serde(rename = "error_code")]
    pub error_code: ErrorCodeMgwconf,
    #[serde(rename = "error_description")]
    pub error_description: String,
}

impl ErrorCode {
    pub fn new(error_code: ErrorCodeMgwconf, error_description: String) -> ErrorCode {
        ErrorCode {
            error_code,
            error_description,
        }
    }
}

impl InnerEntityTrait for ErrorCode {
    fn entity_type(&self) -> &str {
        "ErrorCode"
    }
    fn name(&self) -> String {
        self.error_code.to_string()
    }
    fn to_string(&self) -> String {
        serde_json::to_string_pretty(self).unwrap()
    }
    fn as_any(&self) -> &dyn std::any::Any {
        self
    }
}

#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ErrorCodeMgwconf {
    #[serde(rename = "MGW")]
    Mgw,
    #[serde(rename = "MGW_Configuration")]
    MgwConfiguration,
}

impl Default for ErrorCodeMgwconf {
    fn default() -> ErrorCodeMgwconf {
        Self::Mgw
    }
}

impl std::fmt::Display for ErrorCodeMgwconf {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        write!(f, "{:?}", Self::default())
    }
}


