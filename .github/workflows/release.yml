name: Release

on:
  push:
    tags: ["v[0-9]+.[0-9]+.[0-9]+*"]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CARGO_TERM_COLOR: always

jobs:
  windows:
    runs-on: windows-latest

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v3
      - name: Install Just
        uses: extractions/setup-just@v1
      - name: Test
        run: cargo test --release
      - name: Build
        run: just --set target "x86_64-pc-windows-msvc" release
      - name: Upload mgwc.exe
        uses: "actions/github-script@v6"
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          script: |
            const fs = require('fs').promises;
            await github.rest.repos.uploadReleaseAsset({
              name: 'mgwc.exe',
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: process.env.release_id,
              data: await fs.readFile('./target/release/mgwc.exe')
            });
      - name: Upload mgwc_ui.exe
        uses: "actions/github-script@v6"
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          script: |
            const fs = require('fs').promises;
            await github.rest.repos.uploadReleaseAsset({
              name: 'mgwc_ui.exe',
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: process.env.release_id,
              data: await fs.readFile('./target/release/mgwc_ui.exe')
            });
        
  linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install Just
        uses: extractions/setup-just@v1
      - name: Test
        run: cargo test --release
      - name: Build
        run: just --set target "x86_64-unknown-linux-gnu" release
      - name: Upload mgwc
        uses: "actions/github-script@v6"
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          script: |
            const fs = require('fs').promises;
            await github.rest.repos.uploadReleaseAsset({
              name: 'mgwc',
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: process.env.release_id,
              data: await fs.readFile('./target/release/mgwc')
            });
      - name: Upload mgwc_ui
        uses: "actions/github-script@v6"
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          script: |
            const fs = require('fs').promises;
            await github.rest.repos.uploadReleaseAsset({
              name: 'mgwc_ui',
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: process.env.release_id,
              data: await fs.readFile('./target/release/mgwc_ui')
            });
