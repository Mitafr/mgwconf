name: Release

on:
  push:
    tags: ["[0-9]+.[0-9]+.[0-9]+*"]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CARGO_TERM_COLOR: always

jobs:
  windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install Just
        uses: extractions/setup-just@v1
      - name: Install Perl for OpenSSL
        run: choco install strawberryperl
      - name: Install required Perl modules for OpenSSL
        run: |
          perl -MCPAN -e "install 'Locale::Maketext::Simple'"
          perl -MLocale::Maketext::Simple -e "print 'Locale::Maketext::Simple module is installed'"
          echo "PERL=$((where.exe perl)[0])" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8
          echo "OPENSSL_SRC_PERL=$((where.exe perl)[0])" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8
      - name: Test
        run: cargo test --release
      - name: Build
        run: just --set target "x86_64-pc-windows-msvc" release
      - name: Upload artifact mgwc.exe
        uses: actions/upload-artifact@v4
        with:
          name: mgwc.exe
          path: ./target/x86_64-pc-windows-msvc/release/mgwc.exe
      - name: Upload artifact mgwc_ui.exe
        uses: actions/upload-artifact@v4
        with:
          name: mgwc_ui.exe
          path: ./target/x86_64-pc-windows-msvc/release/mgwc_ui.exe
        
  linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install Just
        uses: extractions/setup-just@v1
      - name: Install musl
        run: |
          sudo apt-get install musl-tools musl musl-dev libssl-dev
      - name: Test
        run: cargo test --release
      - name: Build gnu
        run: just --set target "x86_64-unknown-linux-gnu" release
      - name: Add target x86_64-unknown-linux-musl
        run: rustup target add x86_64-unknown-linux-musl
      - name: Build musl
        run: just --set target "x86_64-unknown-linux-musl" release
      #################
      ##   mgwc.gnu  ##
      #################
      - run: mv ./target/x86_64-unknown-linux-gnu/release/mgwc ./target/x86_64-unknown-linux-gnu/release/mgwc.x86_64-unknown-linux-gnu
      - name: Upload artifact mgwc.gnu
        uses: actions/upload-artifact@v4
        with:
          name: mgwc.x86_64-unknown-linux-gnu
          path: ./target/x86_64-unknown-linux-gnu/release/mgwc.x86_64-unknown-linux-gnu
      ##################
      ##   mgwc.musl  ##
      ##################
      - run: mv ./target/x86_64-unknown-linux-musl/release/mgwc ./target/x86_64-unknown-linux-musl/release/mgwc.x86_64-unknown-linux-musl
      - name: Upload artifact mgwc.musl
        uses: actions/upload-artifact@v4
        with:
          name: mgwc.x86_64-unknown-linux-musl
          path: ./target/x86_64-unknown-linux-musl/release/mgwc.x86_64-unknown-linux-musl
      ##################
      ##  mgwc_ui.gnu ##
      ##################
      - run: mv ./target/x86_64-unknown-linux-gnu/release/mgwc_ui ./target/x86_64-unknown-linux-gnu/release/mgwc_ui.x86_64-unknown-linux-gnu
      - name: Upload artifact mgwc_ui.gnu
        uses: actions/upload-artifact@v4
        with:
          name: mgwc_ui.x86_64-unknown-linux-gnu
          path: ./target/x86_64-unknown-linux-gnu/release/mgwc_ui.x86_64-unknown-linux-gnu
      ###################
      ##  mgwc_ui.musl ##
      ###################
      - run: mv ./target/x86_64-unknown-linux-musl/release/mgwc_ui ./target/x86_64-unknown-linux-musl/release/mgwc_ui.x86_64-unknown-linux-musl
      - name: Upload artifact mgwc_ui.musl
        uses: actions/upload-artifact@v4
        with:
          name: mgwc_ui.x86_64-unknown-linux-musl
          path: ./target/x86_64-unknown-linux-musl/release/mgwc_ui.x86_64-unknown-linux-musl
  release:
    needs: [windows, linux]

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: mgwc*
        merge-multiple: true

    - name: Create a release
      uses: softprops/action-gh-release@v1
      with:
        # Artifacts are put in subfolders, hence the `*/*`
        files: |
          ./mgwc*
        fail_on_unmatched_files: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}